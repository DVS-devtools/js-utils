{"version":3,"sources":["webpack://JsLogger/webpack/universalModuleDefinition","webpack://JsLogger/webpack/bootstrap","webpack://JsLogger/./src/globals.js","webpack://JsLogger/./src/index.js","webpack://JsLogger/./src/init/index.js","webpack://JsLogger/./src/logger/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","globals","enable","__webpack_exports__","init","options","Globals","debug","_len","arguments","length","args","Array","_key","console","info","_len2","_key2","log","_len3","_key3","warn","_len4","_key4","error","_len5","_key5"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"JsLogger\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JsLogger\"] = factory();\n\telse\n\t\troot[\"JsLogger\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default { enable: true };\n","/**\n * @class JsLogger\n * @description JsLogger is an advanced logger used for stable production build. You can set\n *  the enable value using the init function depending where you are.\n */\nimport init from './init';\nimport {\n    debug, info, log, warn, error\n} from './logger';\n\nexport default {\n    /**\n     * @see modules/init\n     */\n    init,\n\n    /**\n     * @see modules/debug\n     */\n    debug,\n\n    /**\n     * @see modules/info\n     */\n    info,\n    /**\n     * @see modules/log\n     */\n    log,\n\n    /**\n     * @see modules/warn\n     */\n    warn,\n\n    /**\n     * @see modules/error\n     */\n    error\n};\n","/**\n * @memberof JsLogger\n * @function init\n * @description Enable or disable logger for production environment. If set to false, only warnings\n * and error will be logged.\n * @param {Object} options (see attributes below)\n * @param {String} [options.enable=false] enable/disable log\n\n *\n * @example\n * // Initialize JsLogger\n *  JsLogger.init({\n *      enable: true\n *  });\n */\n\nimport Globals from '../globals';\n\nexport default (options) => {\n    Globals.enable = options.enable;\n};\n","import Globals from '../globals';\n/* eslint-disable no-console */\n/**\n * @memberof JsLogger\n * @function debug\n * @description Debug message for debug logging\n * @param {any} [args] Any params you want to log as debug\n * @returns void\n *\n * @example\n * // Debug JsLogger\n *  JsLogger.debug(1, 'a', [1], {message: 'a message'}, true);\n */\nexport const debug = (...args) => {\n    if (Globals.enable) {\n        console.debug(args);\n    }\n};\n\n\n/**\n * @memberof JsLogger\n * @function info\n * @description Info message for info logging\n * @param {any} [args] Any params you want to log as info\n * @returns void\n *\n * @example\n * // Info JsLogger\n *  JsLogger.info(1, 'a', [1], {message: 'a message'}, true);\n */\nexport const info = (...args) => {\n    if (Globals.enable) {\n        console.info(args);\n    }\n};\n\n\n/**\n * @memberof JsLogger\n * @function log\n * @description Log message for log logging\n * @param {any} [args] Any params you want to log as log\n * @returns void\n *\n * @example\n * // Log JsLogger\n *  JsLogger.log(1, 'a', [1], {message: 'a message'}, true);\n */\nexport const log = (...args) => {\n    if (Globals.enable) {\n        console.log(args);\n    }\n};\n\n\n/**\n * @memberof JsLogger\n * @function warn\n * @description Warn message for warn logging\n * @param {any} [args] Any params you want to log as warn\n * @returns void\n *\n * @example\n * // Warn JsLogger\n *  JsLogger.warn(1, 'a', [1], {message: 'a message'}, true);\n */\nexport const warn = (...args) => {\n    console.warn(args);\n};\n\n\n/**\n * @memberof JsLogger\n * @function error\n * @description Error message for error logging\n * @param {any} [args] Any params you want to log as error\n * @returns void\n *\n * @example\n * // Error JsLogger\n *  JsLogger.error(1, 'a', [1], {message: 'a message'}, true);\n */\nexport const error = (...args) => {\n    console.error(args);\n};\n/* eslint-enable no-console */\n"],"sourceRoot":""}